{
  "name": "grunt-cdnify",
  "version": "0.1.1",
  "description": "Converts local URLs to CDN ones.",
  "homepage": "https://github.com/callumlocke/grunt-cdnify",
  "repository": {
    "type": "git",
    "url": "https://github.com/callumlocke/grunt-cdnify.git"
  },
  "bugs": {
    "url": "https://github.com/callumlocke/grunt-cdnify/issues"
  },
  "author": {
    "name": "Callum Locke",
    "url": "https://github.com/callumlocke"
  },
  "keywords": [
    "gruntplugin"
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-clean": "~0.4.0",
    "grunt": "~0.4.2",
    "grunt-cli": "~0.1.11",
    "load-grunt-tasks": "~0.6.0",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-contrib-jshint": "~0.10.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "css-url-rewriter": "0.0.1",
    "soup": "~0.1.3"
  },
  "readme": "# grunt-cdnify [![Build Status](https://secure.travis-ci.org/callumlocke/grunt-cdnify.png?branch=master)](http://travis-ci.org/callumlocke/grunt-cdnify) [![Dependency Status](https://gemnasium.com/callumlocke/grunt-cdnify.png)](https://gemnasium.com/callumlocke/grunt-cdnify)\n\n> Grunt plugin for rewriting static resource URLs found in your HTML and CSS.\n\n## What it does\nThe task looks through your specified files for URLs to rewrite, in the following places:\n\n* `<img src=\"____\">`\n* `<script src=\"____\"></script>`\n* `<link rel=\"stylesheet\" href=\"____\">`\n* `background-image: url(____);` in your CSS (including inside `<style>` tags in your HTML)\n\nSee options below for how it modifies them.\n\n\n## Options\nYou should set either `base` **or** `rewriter` (not both).\n\n### `base`\nFor the most common use case, just set a `base` string for your URLs – eg, `'//cdn.example.com/'`. The cdnify task will automatically search for all **local** URLs in your files, and prefix them with this string. (It will automatically avoid double-slashes.)\n\nExample:\n\n```js\ncdnify: {\n  someTarget: {\n    options: {\n      base: '//cdn.example.com/stuff/'\n    },\n    files: [{\n      expand: true,\n      cwd: 'app',\n      src: '**/*.{css,html}',\n      dest: 'dist'\n    }]\n  }\n}\n```\n\n### `rewriter`\nFor more control, you can specify a custom `rewriter` function instead. In this case, the task will search for **all** URLs (not just local ones) and run your function on each one. Your function should return the new value.\n\nExample:\n\n```js\ncdnify: {\n  someTarget: {\n    options: {\n      rewriter: function (url) {\n        if (url.indexOf('data:') === 0)\n          return url; // leave data URIs untouched\n        else\n          return url + '?12345'; // add query string to all other URLs\n      }\n    },\n    files: [{\n      expand: true,\n      cwd: 'app',\n      src: '**/*.{css,html}',\n      dest: 'dist'\n    }]\n  }\n}\n```\n\n### `css` (boolean)\nWhether to modify CSS. Applies to both `*.css` files and `<style>` elements. Default: `true`.\n\n### `html` (boolean/object)\nWhether/how to modify HTML. Defaults to `true`, which will update HTML according to this standard config:\n\n```js\n{\n  'img[src]': 'src',\n  'link[rel=stylesheet]': 'href',\n  'script[src]': 'src',\n  'video[poster]': 'poster',\n  'source[src]': 'src'\n}\n```\n\nThat is, any elements matching the CSS selector `img[src]` will have their `src` attributes cdnified, etc.\n\nTo customise this config, you can set the `html` option to an object of custom selector:attribute pairs. These will be added to the standard set shown above – if you want to **not** use one of the standard pairs, you have to explicitly override it with `false`.\n\nFor example:\n\n```js\noptions: {\n  html: {\n    'img[ng-src]': 'ng-src', // cdnify angular images\n    'script[src]': false // don't cdnify script tags\n  }\n}\n```\n",
  "readmeFilename": "README.md",
  "_id": "grunt-cdnify@0.1.1",
  "dist": {
    "shasum": "3be7d83490b2558ed78a4d5374efde3a85215eb4"
  },
  "_from": "grunt-cdnify@^0.1.0",
  "_resolved": "https://registry.npmjs.org/grunt-cdnify/-/grunt-cdnify-0.1.1.tgz"
}
